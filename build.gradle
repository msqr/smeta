plugins {
    id 'java-library'
}

version = "${version}"
description = 'sMeta'
archivesBaseName = 'smeta'

sourceCompatibility = 1.5
targetCompatibility = 1.5

repositories {
    mavenLocal()
	mavenCentral()
}

ext {
    libraries = [
        // Test dependencies.
        hamcrest: 'org.hamcrest:hamcrest-library:1.3',
        junit: 'junit:junit:4.13.2',
    ]
}

sourceSets {
	test {
		resources {
			srcDir 'src/test/environment'
		}
	}
}

dependencies {
	implementation 'com.drewnoakes:metadata-extractor:2.18.0'
	implementation 'com.googlecode.mp4parser:isoparser:1.1.22'
	implementation 'javax.media:jmf:2.1.1e'
	implementation 'log4j:log4j:1.2.16'
	implementation files('lib/QTJSupport.jar')
	implementation files('lib/QTJava.zip')
    
    // Testing
    testImplementation 	libraries.junit,
		        		libraries.hamcrest
}

[
    compileJava,
    compileTestJava
].each() {
    it.options.compilerArgs += [
        "-Xlint:all",
        "-Xlint:-options",
        "-Xlint:-path",
        "-Xlint:-try"
    ]
    it.options.encoding = "UTF-8"
    if (rootProject.hasProperty('failOnWarnings') && rootProject.failOnWarnings.toBoolean()) {
        it.options.compilerArgs += ["-Werror"]
    }
}

compileTestJava {
    options.compilerArgs += [
        "-Xlint:-serial"
    ]
}

jar.manifest {
    attributes('Implementation-Title': name,
    'Implementation-Version': version,
    'Built-By': System.getProperty('user.name'),
    'Built-JDK': System.getProperty('java.version'),
    'Source-Compatibility': sourceCompatibility,
    'Target-Compatibility': targetCompatibility)
}

javadoc.options {
    encoding = 'UTF-8'
    use = true
    links 'https://docs.oracle.com/en/java/javase/17/docs/api/'
    source = "17"
}

// Disable JavaDoc doclint on Java 8. It's annoying.
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

// For jdk10 we must explicitly choose between html4 and html5, otherwise we get a warning
if (JavaVersion.current().isJava10Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addBooleanOption('html5', true)
        }
    }
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
    archiveClassifier = 'javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
    archiveClassifier = 'sources'
}

tasks.named('test') {
    useJUnitPlatform()
}

// At a test failure, log the stack trace to the console so that we don't
// have to open the HTML in a browser.
test {
    testLogging {
        exceptionFormat = 'full'
        showExceptions true
        showCauses true
        showStackTraces true
    }
    maxHeapSize = '1500m'
}
